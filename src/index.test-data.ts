/* eslint-disable no-tabs */
/* eslint-disable no-irregular-whitespace */

/* ************************************************************************************************
 *                                             SECRETS                                            *
 ************************************************************************************************ */

export const SHORT_SECRET =
  'Sy6ZIyaVOR031zWkhXSDy2VemA8zSrS_SU6o5OcN0VoSii2BEdM973ZyPX445pMV6fQ9CvbQjjEO-HHIWEC6a9OCDmFPX3';

export const MEDIUM_SECRET =
  'svj!ceEnM?F*d[n]&d3r[UP1lH7YUfhh:35lLHQFl[grhKvFX^H,6s|0U;6l]lwH,_b3(Tso>-38zg@/D74?jW]tsaiQ0O@8cusHBDUJrB,CY)91_o6D@29y@ojZ_Wl,s4)EOBS@,~?EM)duDcfL)TdtPduqI.1<y#)RFN^EB*t7yDR,K)h9Im(jIJQUicV!s3vDBy,ZvM!m1:rI__j^8&RH@2D+)QvvbIpUVogzq+%gvz3iMW-Mc%.Kd%:?g05bsZUZa6EAl^tjqwLXoTb4oQgJibiGx~>x>C.(put8)a-QHG^FfkcZZoN,[d1r2:V8yvQ_Y4pLfwHQ*@BwCo/y|@xG>-TC/V';

export const LONG_SECRET =
  '9+G7<FEU7wC[)x+vI*53#gor+jrG)f?c|R^.+G(Q:DDZR9y-sPr5rWyPHJ+6J<:a0BaeI64bs9lo6]h(tKY*uh<3!PAor1zDjnl0&j5QOFXE[c3DS7!mR;SMD&1YK|9J-g2,S*gS5b8-,F*6B12R!j/>tZTSn4NbHm4I%Dj:_Ea#iZ:maN:&i5gXe4Z?IH<t?Z#TZi4UWm[!b)g>W<lZvo*JtcMT<[+C33V]kHQL(40DA/t44K%~8F8(JzrW(CjDQ0mh|NV,fv.x@b^NQr@~NEMaoMV?Q6feIqi#hsTkG)B/:[y%Pc!:^v:MVRvRtco:O-u,o+/+7KK)7WFB!i-%9CspNu.>2slgc?jVw%iO#;~m7KPtaE@h(CBk8+@|IL<HJ.hFO3;zC?A_[^mr0&A]tU#HD:?/]p_cDTx,283Y3+m/k]BSVx[Y7v#e4&hG%qAoTaQ_V(J!kz4/3s8RLz;8@*b![B14JHXO./,gS,bNsjO*p>]0,t:F&^f~za^^et4*!P@a]3<2+9serr;x%N5]mZHTGnd%:Wz5.r[x)_UA%s#,spmMZD4_hbW]q5]9B2s(d[1~:&zaCM(wghdF-8E^/!Ut-DL!AoOwA[;y74BYtV]8wKB]I3>Jj9jV[Rdlg2:WakFrr|g[AM2N/N|/5V^xcg4ca/Z22^f5c:98%ii_]|+U_0hbi^qM#qj8x?~_U&*Z8h[-1IyFU^SwbK[*-0q9-;ww-lA4YRu_lp:Erpc7~4X(%Q74?39JS%dMhvCQ5AW04nm6cQdEw5J_7:;c5|g(_]CZ0^e_e9W&tEqd*udpw^/<6P3HJgW1w|D7s)VE~8i(HTyNpbEpfQ&k&jsDuvBRmsf;urCUKMW;#e^aIaX!RcloJAyb)[U4z9D_^[Lw-Ap)(zrAbKwP(gx1NDOp315Ymn/tFt;c|8?fMq^ZExuPS9#wYxkLR_5dBu[3iB~S.-/D.A>O7h:U03_lxZLO0*w(|h(EF[4hWjgWddKa>6M#@ryY3KSUN#*#e%9R)>B/y)ia9jF-a/g6?9cHAZ<%6M*GM9.mXpD+tUuvWlobSMh8ZqvG^uKj]g6A|F#z0-_uoms@KB1by4HR#4eA#X0<Ws:3J^LBNlEy5Yh84MEm]vgSeOm0lWzW2t^/2x6_1@zG9/~(eNJFc&NYE.RsJ%nI4<Y7@UG0>x[x:89WsU%EokcSK(z):oUAycDn7ox&n3&G%H%W.p9GKMdAgn@zz6N@*KS%%,!lhN3CGYDw47Fi?RJg:4+m-w?x!A^)D-@!y1p2HOWNfz?QJ);&PI-M3sCz9]!nBCSp0h6sUb[0l^JpilmU6vSLwd^QvTw1r)PP4<R!T6c(cXTDy*TZ>/dPtKaSW+m%cZy>@HmVEk!ZV+I>Dq?#K6Lv-gewD4]83wLW:vkW1PH.HP.gEngTE~Qfl|POR4^.W+hY|1KN4XvxXgyop-)[-RxFdFL%oQ6~Jhz_&~Fbkj,tniu>cdlm>KpVy6ROfMEV8g]bbx|9J-k8KVnu-B!q^7C!6jY2N8*-]4sk0n+d7?>863zBpy6pe(MX%ZBUR90zAS&;CAh~p)Jo1od[E,iP*1?]GDH8?[CfW)Z.fFtX(zq~0+aKC!dP|O?F4r]akGrwtD~cxUjXf~FZ/!ZVqP6~mg<0N2tK6dGIRKh>EFUd@_&2a#6nmYLr@(v|9Y#@8%TOlk(4sJ#st_,@*<AnZR%&r@Pcz!VTb#?+mic.#1T>:C5N*]Rj5XyvZQZbehD(1gA)XYTw:/htrltL&lk[B;VV-Xb/laS79+WVVsTQBS%V~!2pfDN1@y]>-kRk4^U^0HtI8>.(dxYX&J#Q3Ot@)yhp%XrCh<*4~RkMfnDPlV(1.qvE:K#C*Y+1Au;K/L[/%88y6Iy:bRAwj~KLX5R%tbDzV]Jsf48/SOJQ0LFajPbw?9+6kR0M2aMeCYuC/w?:Jga|ZpdY1,qND6Th83f.qZ2@kDw8-as[RZ,I]EEq|mFfc1kd_MF<@~4Y-~<O%t@s';

export const VERY_LONG_SECRET =
  '!G!PE[8*4Rtvta;!A3qz~X>+3Hl,@]ybKxBo.ig1>_9Ig%.G7o2a]/.6e?b,E|LbYlL^Z;W9zwFVQsSV6cD2PVPnrnWxO_dWvl!n0as~udw;G8h#Cz6G[^L_spO/CFr2t!SUuIZ[JPvMX<NxQQ;Q9Awzi?W<QscwcYiB57*hn;JQka7Ck0?0]oi,i~rFhAw%yTS_>Zn!pEk.AZGfdFi2E-4|~!5kCAdeu-lDH6qZ0(qp<-M|IkVr;uVA#UvSV|Q_rg,M9s*O^7wV!xoDDhxl<z&>!DG![awTi;AM3>X<9!uH@6&EGzbWJ7jxnR%Yqj*IIn4%Es7.MfKq%j3x-;yu.VZAZ[<Cb#+Es)v8D!Ud<WJiZ,/D:w08:!pj!qa:tHK3M*;NS!K4N>PAvw<Gw3/wK~C%JrPDNZ>4/w&t%X(d%/B(~rl%~[W)L>/oa>qxi0clX9rL9,MP^LAv.uz(UYd0cUdL6ege3fE&muj63n7U/18aRx]ZC3b&)g2)Guv6[%d!1qKBAgtq8BGOt:Nu^[<1r/T()uslqskEK^;S?UQB^tW!m,q&4*[5z-[|2_v[tx99M#,|Jzj)*.)d[T?DfN.IeA:yS_]8--+>8,wdoLzhA4HY_|)jVdkjL6RH0j4UCtWH(uZy_o]kIu:n/VoyzFt40L4Vvr1[wdG-(tK^LyGaR<giO_k#3F(8?&ny.P5s**z2Dx[mSjQ[y_Y(CPxoV;3IB@8TYJ]<&eaDnu7&Pv<HxIQ7cp&fG#V0PT~W]PZ2EL[n@3IiY3&eH.:YV[nj.EV5m]u;Z?Z3t2OAfX^XTsA88a10;~1pT40WC-j,Y.GGW.u1(?Jg_YP&P@XdlhF%zcubETS55?<nxgx(<m_G@*.ARGE6[Brpv[-n&?p?Xa^oePibs!f)0>9jrNhEPHiqxdv%e9|l;!(%cW3[Bb#G/9Q,4)O8D0&l15p^!hSF6P_hNP>)B:fB_%K*)fYD;(D]mTj#/!-&p1!wQqG]a[ldNc1nn0Vx*cId52*w1wC*heEq%HXj2xH;i)9YCdEeXvZSnzZUxx*J@xf?<?9<SpsCH.er8aO86UYSPSL~eyzV64ZGs^:AgRLU34!t.hh&<6?>D6!2jL:(S.|Irf~q2S:4!b*A8GlltO.t(T,>,9zr*e/h-7l#[*gg>-F)zrfwGE4O<cv[wuA!6r(+@+:wn9?w2v,W,6s&&emyKj.r_U[k_.15v,<S/HQpC|&<>qyQC7&1jn)[!rpYiWd-,t>M8f.g_h&z3gQw2uq;B+m+KJb|D0|mGuOYlF!)zw%>+_Y)4aX+-%(N6HOAImSO8lT;-Y9ly2A+oU3Q1[&h%q3xTAXe:_#BW%)%0tu/%x&XNl?#*vgl0,2pIn,xgF93YFK|_S~C6,FwF,S^^v%9kQEbip5E@;mYmmBc2;y^EGm^|tG(nCF9e!z^PZu?H7u9KF4W61|.z+[<Uxp_O*MwYw^PhjXWS+C29io>TH@m>-_wySd:n@>,d*)hRG.%z0bq50Pw%,CO-M2LPPjQ>RfgO8Ava^3&!T3oWUKo%|Pd>&Y6:;geEnyk0OV?~IbvY*zqRPTOG4oso-KQ!&f/?1nM9@qe+O%M~R@L2ks;RFb)eg1CN&OW:h%zSgJDMU8St65|q8(9u;iRQ4C~x9%.a7|aX%rC%^Rdq1;!Amaed!<^b+8&yCSVwr>;FS~~nGSg<hnb*3.aLhVQpP8-T~*-@vGIyf#0:XhrrjF:4c)zZ[(ldjPlIQ2_6Td[*!VZ?s<2&3poJfA#qj!XHezf:vR.l_vciYa*AG%WuaQ*nD+Kv:?S+i7gy>e_lepI>AY1&Jyj%^yy-K*zeVnc4&%I/|80jk^BU+ZZ!Y(_0#qE8dAf(,j,(][O|*J[nvqi@ddA&i[>.UGd|q<8#bv%]JI--fioVFE,x*M,gWX3b->%^xe:S/Ph459SA5>YJlj6_NbS)?/Ka/;#PdnL</*vFX8OzH).!NaM@Z*7nJuOc66MZ;1QcsLq)rYVEADf+Q;wT+X<LA?-yJl;P0MjMgf2.1:u&KbNF@34U-nbSWZ%AwlZ#2keu[(~|GgI!e%~e8l9Y%|GLP8.[4t8jK29hkW!UAAymWFEFaQF&bOmE&:LJ>A;RP8sy^ZsM:Qu6N_9>AQb,RIl<VJo86X3XK0tbZYSEt;k5maQR:T+dZ!bxEABzz#Gc1%X?rJ6L2eT%E2d5&o7Gk.e9.uOKa>#tGGklP&uxauc3|KLf!Q,dC:34xuFin(W*tXsA]@0^6jfxjiSr!!e8sp4P%wcp5asjZyuPrb,|-,DM6t*DR4h|#s2Yov,ZP%c3bi)K6Y@z]w:g_9uaDeZkkSKbth6oUno7/Gw+kHKvH3WDS)PIT:g<18M8hk8@_%FNBR56-Xa.L)0l;h5ro#wwK%FiVe/6GfINK5UwZWCctv:Z^IWR*YGhtc6H1^h[;]xR]80FX%r6K3_NDJ,8^hw)~rfB#y[-BKj-L+~9u<+A*EIy;6([s81wn46J4YUEPvNhZ:Q35ODB?JC4/t_-a@uXNFA]>-wTaIE1b0)wck1)2;GWSxXj-I5ZN36FLxXW_p<1d>.;&J<#4-lNix.X~KDC?%3:?!!#OjV~rMX|^8MH[fdVbL0BiH39v3)d0BB!~1)Ep&bf>qgvxwP3cakQ0siIztBblmIicqr&(5^S;>nD(,+F)h_h)!;8!>+_qpL2muu#!hZnY)n;3%aCu_D53c_XN*wMocI[1L/&~5#vU;g^_B~D1/5<dv~5SAQ-KT5cEZMTUc4dqFjn/<3o%#~Io0p%!Ovt7iD-~ZFu2(8bin)[A)@HUygobGjucA7WDSU);KyFZ7q]yfW%ZBj*TWdy:*;C)41jK@ad[5YVn^#vj:_wi:5&+7Y!7O|Oc<tD(I^W!giS^,/7eG!yF:U-6!hQauzLnGggWdH[*+&f<gQ;5u,U>6;trAe2<loxddsLNRHLqts_YOTjEG._bcr|/WQ8HaIXAYc_vp5|DuFu6VDg6i4zx7m2jU96fAC?2V(UFFy#jrcMpKEQ%O*Qb3#i,TrZ/?Hcu.Wiz<ZD_p/Uh*wD[+Wh7aoSrQTFbq!jT^[]o1L]b%Tlj?l:~RpvBc&fug%y@XnTrJD9E9e_kq<0u9s)V<a0;L/;[<EtG~o2j<UA?v^[62gbazZg1DfLc[q^!A#ENdjJ/FbAypMSdw7Kku+rrP&]Ba9+e0tRiN[JKX(]C8E#rq~o2e!2G%?2<zbUxIVA<E%8:AW*|opW/c),AL9X:.?%&&7QB@aPERUhgWt,,kEJckp|BrFg2%rZ/Ih?J/wCnFt7)XM/)n*7n[4/>FMc~<a,:UHcZLQ:Jx;Ji+#-zR/ShfC@K&nZIVYAO_ayui2j.@i!r7%%]@^wMv&gZp+Xlx_&*ibQzi[CTmuSOpuNlOsCTRrfYfc6+?6b^<osdIfEzjN?wx%^oZsi#a|]F|[G*f8/Q)!b&f]VT:+jG?W.9M/^1XX5J,-D_Uz&FIc<eg^v,!zx6tC,;pUm2SwbB?tQowTxS(?VfXXC5XNx9+|Q/(gS*a01Qs*yMP!(,)qHmv65qYJp]H)XgOSKJAu#hGI>]I09[gg+c%&fmUYw,v#:J!4.xP:9YPiB(R2l@%ezrxW-3|d+dV6boKj9wRT2wHUS%re5;DvdPyzq68N9?JSw].c8qAJH%(dS7pn)s6YpXkng~t!.|,+Vi1_qXh]iHbsgb%Pd8H|hX@0|Iob_HQQ.!?+|)J<1&1-m~h,uHb_6!.)D)7YixGHU-fdL>_maPA]l-uF,<PI-g+?ho7P&[OtJu%vK5PoAfzCeznQXj11]K)9(MgZb@vhTsM&rF<*s>EzW,gB.aUWI|zWL%2>;:BO&l[/,i*Talu1_6QBgT!GissX>G~dM<xWkBLEW0L^I,>Mxn;_P#@6Y|X?!^snz&%kMU)xcN.7t4n*AS%679MVhcwqt*RefXbrZx85(>-QXbFVBcr1vE;dR-pzN~YmP)-&/Gc[gTv/:c~te_hp/HSot#[TReB0k_95nN]E1-e|!ATMB|],?1dZ/(5vQe,.gTtBsCbm5&]>XNQ10/WwXTw<geL-It.a9Rcn&hmo_?:hB*k-ENQaeqbRvC&2*;!Z,TFXfdu1@uo|#Zli>UWAav&P[Gk8L+y#_gO&e#;hj-dPBjg_rPqItngtxfYzSw#(QB;Fm)%Fp]mNt6|qaw~Pe23?9#9c^?bCCA@+EhK[#I4F1)rM&o8[7L32zh&pHpxE4r0S~,KU~I9Bxps/m)UPVLUtby|](OCWeN)[gdT4xQuF)qH8JlcoipZchwb?e*u-O@dg<6RbHPJFQ@!|]6x%;IPYhH^!CO4ps!])onc2Xr,SD<5kyEotDI>z;7Wg!K4uPo;c+vA4T3gX<%8K%TeR&Al]?N(KSR4IxyukVeJbW&Syde|prApg~sVvO04t1b/HpOo7|HUn%1Gpy/RUg^a(q4N/#G@.%veA||.B(5F;r-adJr;k|L|eGC9P1jCG3B9V,GTN-[F>eAhFu],)#DK5MI1#TLlJOesJ;C/S)0FZj8(y;;f5,e/Qjs;qD~6H(Y-1kPTDs@fkd-X-SOJ;1oV8neh;Pit]Kc,*lyB@yL,GFj_eVA>y<aG_ss%FIVMVN<,7ad-S!BvLfP[M+e3xtUIy9Ev3+,>tWH?t3|@iIQ<7Mkz~[u&o-+]7j|rCYPW-YCu+FG)OlQ0[i>XkEu*a<5Yi!8|Ry;*<]QrR?Ju#M.EZe6kl>FUs4g;I#gJ2Kh_y]7kT#V_Im!O52txDF[XtkTPq6JhA#?|YkPzZF*tyCFkU0J0mfQL|L?@iiP]P2K|,D1B]^lvF,9GCK2XUhoWW>09T>S?o]kKcl!b~s<KY&2;8Wyrv5%)5_^&igG_p2|vpkxpf6_d;A6Y+F5s3I;-hapJ(X?)/pP*/KB,(.JA;.cko++C!Wsy&&YuYJ&mo>&aRLZ&YC*R?i>x:e.zn[pG996ZYxQQ@n_eCxWt9-Gd!F/p@m?Z:zG+|R)NPAzQM7JS,yaB)ecAnh:AS3B%mcKGkvIFG4nec';

/* ************************************************************************************************
 *                                            MESSAGES                                            *
 ************************************************************************************************ */

export const SHORT_MSG =
  'E9873D79C6D87DC0FB6A5778633389_SAMPLE_PRIVATE_KEY_DO_NOT_IMPORT_F4453213303DA61F20BD67FC233AA33262';

export const MEDIUM_MSG =
  'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using "Content here, content here", making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for "lorem ipsum" will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).';

export const LONG_MSG = `
<!DOCTYPE html>
  <!-- saved from url=(0037)https://jestjs.io/docs/using-matchers -->
  <html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-29.7 docs-doc-page docs-doc-id-using-matchers" data-has-hydrated="true" data-theme="light" data-announcement-bar-initially-dismissed="false" data-rh="lang,dir,class,data-has-hydrated"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

  <meta name="generator" content="Docusaurus v3.0.0">
  <title>Using Matchers Â· Jest</title><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="https://jestjs.io/img/opengraph.png"><meta data-rh="true" name="twitter:image" content="https://jestjs.io/img/opengraph.png"><meta data-rh="true" property="og:url" content="https://jestjs.io/docs/using-matchers"><link data-rh="true" rel="icon" href="https://jestjs.io/img/favicon/favicon.ico"><link data-rh="true" rel="canonical" href="https://jestjs.io/docs/using-matchers"><link rel="alternate" type="application/rss+xml" href="https://jestjs.io/blog/rss.xml" title="Jest RSS Feed">
  <link rel="alternate" type="application/atom+xml" href="https://jestjs.io/blog/atom.xml" title="Jest Atom Feed">

  <link rel="preconnect" href="https://www.google-analytics.com/">
  <link rel="preconnect" href="https://www.googletagmanager.com/">
  <script type="text/javascript" async="" src="./Using Matchers Â· Jest_files/analytics.js"></script><script type="text/javascript" async="" src="./Using Matchers Â· Jest_files/js"></script><script async="" src="./Using Matchers Â· Jest_files/js(1)"></script>
  <script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","UA-44373548-17",{})</script>


  <link rel="search" type="application/opensearchdescription+xml" title="Jest" href="https://jestjs.io/opensearch.xml">

  <link rel="icon" href="https://jestjs.io/img/jest.png">
  <link rel="manifest" href="https://jestjs.io/manifest.json">
  <meta name="theme-color" content="#FFF">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="#000">
  <link rel="apple-touch-icon" href="https://jestjs.io/img/jest.png">
  <link rel="mask-icon" href="https://jestjs.io/img/jest.svg" color="#15c213">
  <meta name="msapplication-TileImage" content="/img/jest.png">
  <meta name="msapplication-TileColor" content="#000"><link rel="stylesheet" href="./Using Matchers Â· Jest_files/styles.00945e6d.css">
  <script src="./Using Matchers Â· Jest_files/runtime~main.659f1d65.js" defer="defer"></script>
  <script src="./Using Matchers Â· Jest_files/main.443490be.js" defer="defer"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" data-rh="true"><link rel="alternate" href="https://jestjs.io/docs/using-matchers" hreflang="en" data-rh="true"><link rel="alternate" href="https://jestjs.io/ja/docs/using-matchers" hreflang="ja" data-rh="true"><link rel="alternate" href="https://jestjs.io/es-ES/docs/using-matchers" hreflang="es-ES" data-rh="true"><link rel="alternate" href="https://jestjs.io/fr/docs/using-matchers" hreflang="fr" data-rh="true"><link rel="alternate" href="https://jestjs.io/pt-BR/docs/using-matchers" hreflang="pt-BR" data-rh="true"><link rel="alternate" href="https://jestjs.io/ro/docs/using-matchers" hreflang="ro" data-rh="true"><link rel="alternate" href="https://jestjs.io/ru/docs/using-matchers" hreflang="ru" data-rh="true"><link rel="alternate" href="https://jestjs.io/uk/docs/using-matchers" hreflang="uk" data-rh="true"><link rel="alternate" href="https://jestjs.io/zh-Hans/docs/using-matchers" hreflang="zh-Hans" data-rh="true"><link rel="alternate" href="https://jestjs.io/docs/using-matchers" hreflang="x-default" data-rh="true"><meta property="og:locale" content="en" data-rh="true"><meta property="og:locale:alternate" content="ja" data-rh="true"><meta property="og:locale:alternate" content="es_ES" data-rh="true"><meta property="og:locale:alternate" content="fr" data-rh="true"><meta property="og:locale:alternate" content="pt_BR" data-rh="true"><meta property="og:locale:alternate" content="ro" data-rh="true"><meta property="og:locale:alternate" content="ru" data-rh="true"><meta property="og:locale:alternate" content="uk" data-rh="true"><meta property="og:locale:alternate" content="zh_Hans" data-rh="true"><meta name="docusaurus_locale" content="en" data-rh="true"><meta name="docsearch:language" content="en" data-rh="true"><link rel="preconnect" href="https://hp439uusol-dsn.algolia.net/" crossorigin="anonymous" data-rh="true"><meta name="docusaurus_version" content="29.7" data-rh="true"><meta name="docusaurus_tag" content="docs-default-29.7" data-rh="true"><meta name="docsearch:version" content="29.7" data-rh="true"><meta name="docsearch:docusaurus_tag" content="docs-default-29.7" data-rh="true"><meta property="og:title" content="Using Matchers Â· Jest" data-rh="true"><meta name="description" content="Jest uses &quot;matchers&quot; to let you test values in different ways. This document will introduce some commonly used matchers. For the full list, see the expect API doc." data-rh="true"><meta property="og:description" content="Jest uses &quot;matchers&quot; to let you test values in different ways. This document will introduce some commonly used matchers. For the full list, see the expect API doc." data-rh="true"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/935f2afb.09bea5e2.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/935f2afb.09bea5e2.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/0f0dd0bc.a55294d0.js"><link rel="prefetch" href="https://jestjs.io/assets/js/7e37206e.47264f8b.js"><link rel="prefetch" href="https://jestjs.io/assets/js/b05b1389.fe5ae5bd.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/de16b7c9.a158decd.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/de16b7c9.a158decd.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/f169036e.c956ab08.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/e4bc73d0.fcc8246a.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/46efe472.b47c809c.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/ff3db249.ef23685e.js"><link rel="prefetch" href="https://jestjs.io/assets/js/c4f5d8e4.1962b6ad.js"><link rel="prefetch" href="https://jestjs.io/assets/js/b05b1389.fe5ae5bd.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/50643bda.a19dd543.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/50643bda.a19dd543.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/06f79043.ab6bbbd7.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/698d6d78.02c68d73.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/2e42d2e3.e611192a.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a6aa9e1f.3785e524.js"><link rel="prefetch" href="https://jestjs.io/assets/js/357bfea1.e9e234c8.js"><link rel="prefetch" href="https://jestjs.io/assets/js/814f3328.99974773.js"><link rel="prefetch" href="https://jestjs.io/assets/js/d6974f36.a474a59e.js"><link rel="prefetch" href="https://jestjs.io/assets/js/ccc633b7.c77dfea9.js"><link rel="prefetch" href="https://jestjs.io/assets/js/8c211616.85b8f16c.js"><link rel="prefetch" href="https://jestjs.io/assets/js/724b0c82.20970835.js"><link rel="prefetch" href="https://jestjs.io/assets/js/89b536d2.cbf2d802.js"><link rel="prefetch" href="https://jestjs.io/assets/js/0b7a6220.d65f7158.js"><link rel="prefetch" href="https://jestjs.io/assets/js/f939d2ce.a786fb36.js"><link rel="prefetch" href="https://jestjs.io/assets/js/00ee0be3.12fdbed9.js"><link rel="prefetch" href="https://jestjs.io/assets/js/d8079ee7.c3ef0e22.js"><link rel="prefetch" href="https://jestjs.io/assets/js/27aaa9a9.273e06ed.js"><link rel="prefetch" href="https://jestjs.io/assets/js/b2b675dd.fe36000a.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/8cf5c931.ffababc7.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/0a9cf77e.17cfac17.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/0a9cf77e.17cfac17.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/b7dd1021.9bdc0f1c.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/9ece8cde.5b21954f.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/1a696db4.a319be93.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/35f37be5.514b0dea.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/f4110e1e.8292677d.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/5e95c892.ca183316.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a62804cc.0944f6e5.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a7bd4aaa.12966a80.js"><link rel="prefetch" href="https://jestjs.io/assets/js/aac63f81.040ee0c3.js"><link rel="prefetch" href="https://jestjs.io/assets/js/a94703ab.f84f2472.js"><link rel="prefetch" href="https://jestjs.io/assets/js/17896441.aa302b10.js"><link rel="prefetch" href="https://jestjs.io/assets/js/7e1cd887.7c3b6eb5.js"></head>
  <body class="" data-rh="class" style="overflow: visible;">
  <script>!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return localStorage.getItem("theme")}catch(t){}}();t(null!==e?e:"light")}(),function(){try{const a=new URLSearchParams(window.location.search).entries();for(var[t,e]of a)if(t.startsWith("docusaurus-data-")){var n=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(n,e)}}catch(t){}}(),document.documentElement.setAttribute("data-announcement-bar-initially-dismissed",function(){try{return"true"===localStorage.getItem("docusaurus.announcement.dismiss")}catch(t){}return!1}())</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_oPtH" href="https://jestjs.io/docs/using-matchers#__docusaurus_skipToContent_fallback">Skip to main content</a></div><div class="announcementBar_zJRd" style="background-color:#20232a;color:#fff" role="banner"><div class="content_bSb_ announcementBarContent_t7IR">Support Ukraine ðºð¦ <a target="_blank" rel="noopener noreferrer" href="https://opensource.facebook.com/support-ukraine"> Help Provide Humanitarian Aid to Ukraine</a>.</div></div><nav aria-label="Main" class="navbar navbar--fixed-top"><div class="navbar__inner"><div class="navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewBox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a class="navbar__brand" href="https://jestjs.io/"><b class="navbar__title text--truncate">Jest</b></a><div class="navbar__item dropdown dropdown--hoverable"><a class="navbar__link" aria-haspopup="true" aria-expanded="false" role="button" href="https://jestjs.io/docs/getting-started">29.7</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="https://jestjs.io/docs/next/using-matchers">Next</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="https://jestjs.io/docs/using-matchers">29.7</a></li><li><a class="dropdown__link" href="https://jestjs.io/docs/29.6/using-matchers">29.6</a></li><li><a class="dropdown__link" href="https://jestjs.io/docs/29.5/using-matchers">29.5</a></li><li><a class="dropdown__link" href="https://jestjs.io/docs/29.4/using-matchers">29.4</a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/29.3/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">29.3<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/29.2/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">29.2<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/29.1/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">29.1<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/29.0/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">29.0<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/28.x/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">28.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/27.x/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">27.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/26.x/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">26.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://jest-archive-august-2023.netlify.app/docs/25.x/getting-started/" target="_blank" rel="noopener noreferrer" class="dropdown__link">25.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://archive.jestjs.io/docs/en/24.x/getting-started.html" target="_blank" rel="noopener noreferrer" class="dropdown__link">24.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://archive.jestjs.io/docs/en/23.x/getting-started.html" target="_blank" rel="noopener noreferrer" class="dropdown__link">23.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a href="https://archive.jestjs.io/docs/en/22.x/getting-started.html" target="_blank" rel="noopener noreferrer" class="dropdown__link">22.x<svg width="12" height="12" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li><a class="dropdown__link" href="https://jestjs.io/versions">All versions</a></li></ul></div></div><div class="navbar__items navbar__items--right"><a aria-current="page" class="navbar__item navbar__link navbar__link--active" href="https://jestjs.io/docs/getting-started">Docs</a><a class="navbar__item navbar__link" href="https://jestjs.io/docs/api">API</a><a class="navbar__item navbar__link" href="https://jestjs.io/help">Help</a><a class="navbar__item navbar__link" href="https://jestjs.io/blog">Blog</a><div class="navbar__item dropdown dropdown--hoverable dropdown--right"><a href="https://jestjs.io/docs/using-matchers#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link"><svg viewBox="0 0 24 24" width="20" height="20" aria-hidden="true" class="iconLanguage_kvP7"><path fill="currentColor" d="M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"></path></svg>English</a><ul class="dropdown__menu"><li><a href="https://jestjs.io/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link dropdown__link--active" lang="en">English</a></li><li><a href="https://jestjs.io/ja/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="ja">æ¥æ¬èª</a></li><li><a href="https://jestjs.io/es-ES/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="es-ES">EspaÃ±ol</a></li><li><a href="https://jestjs.io/fr/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="fr">FranÃ§ais</a></li><li><a href="https://jestjs.io/pt-BR/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="pt-BR">PortuguÃªs (Brasil)</a></li><li><a href="https://jestjs.io/ro/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="ro">RomÃ¢nÄ</a></li><li><a href="https://jestjs.io/ru/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="ru">Ð ÑÑÑÐºÐ¸Ð¹</a></li><li><a href="https://jestjs.io/uk/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="uk">Ð£ÐºÑÐ°ÑÐ½ÑÑÐºÐ°</a></li><li><a href="https://jestjs.io/zh-Hans/docs/using-matchers" target="_self" rel="noopener noreferrer" class="dropdown__link" lang="zh-Hans">ç®ä½ä¸­æ</a></li></ul></div><a href="https://github.com/jestjs/jest" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link" aria-label="GitHub repository"></a><div class="toggle_ki11 colorModeToggle_Hewu"><button class="clean-btn toggleButton_MMFG" type="button" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><svg viewBox="0 0 24 24" width="24" height="24" class="lightToggleIcon_lgto"><path fill="currentColor" d="M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"></path></svg><svg viewBox="0 0 24 24" width="24" height="24" class="darkToggleIcon_U96C"><path fill="currentColor" d="M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"></path></svg></button></div><div class="navbarSearchContainer_bzqh"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="main-wrapper mainWrapper_MB5r"><div class="docsWrapper__sE8"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_iEvu" type="button"></button><div class="docRoot_DfVB"><aside class="theme-doc-sidebar-container docSidebarContainer_c7NB"><div class="sidebarViewport_KYo0"><div class="sidebar_CUen"><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_jmj1 menuWithAnnouncementBar_YufC"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a href="https://jestjs.io/docs/using-matchers#" class="menu__link menu__link--sublist menu__link--sublist-caret menu__link--active" aria-expanded="true">Introduction</a></div><ul class="menu__list" style="display: block; overflow: visible; height: auto;"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/getting-started">Getting Started</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="https://jestjs.io/docs/using-matchers">Using Matchers</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/asynchronous">Testing Asynchronous Code</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/setup-teardown">Setup and Teardown</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/mock-functions">Mock Functions</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/jest-platform">Jest Platform</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/jest-community">Jest Community</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="https://jestjs.io/docs/more-resources">More Resources</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="https://jestjs.io/docs/using-matchers#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Guides</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="https://jestjs.io/docs/using-matchers#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Framework Guides</a></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a href="https://jestjs.io/docs/using-matchers#" class="menu__link menu__link--sublist menu__link--sublist-caret" aria-expanded="false">Upgrade Guides</a></div></li></ul></nav><button type="button" title="Collapse sidebar" aria-label="Collapse sidebar" class="button button--secondary button--outline collapseSidebarButton_oTwn"><svg width="20" height="20" aria-hidden="true" class="collapseSidebarButtonIcon_pMEX"><g fill="#7a7a7a"><path d="M9.992 10.023c0 .2-.062.399-.172.547l-4.996 7.492a.982.982 0 01-.828.454H1c-.55 0-1-.453-1-1 0-.2.059-.403.168-.551l4.629-6.942L.168 3.078A.939.939 0 010 2.528c0-.548.45-.997 1-.997h2.996c.352 0 .649.18.828.45L9.82 9.472c.11.148.172.347.172.55zm0 0"></path><path d="M19.98 10.023c0 .2-.058.399-.168.547l-4.996 7.492a.987.987 0 01-.828.454h-3c-.547 0-.996-.453-.996-1 0-.2.059-.403.168-.551l4.625-6.942-4.625-6.945a.939.939 0 01-.168-.55 1 1 0 01.996-.997h3c.348 0 .649.18.828.45l4.996 7.492c.11.148.168.347.168.55zm0 0"></path></g></svg></button></div></div></aside><main class="docMainContainer_a9sJ"><div class="container padding-top--md padding-bottom--lg"><div class="row"><div class="col docItemCol_Qr34"><div class="docItemContainer_tjFy"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_T5ub" aria-label="Breadcrumbs"><ul class="breadcrumbs" itemscope="" itemtype="https://schema.org/BreadcrumbList"><li class="breadcrumbs__item"><a aria-label="Home page" class="breadcrumbs__link" href="https://jestjs.io/"><svg viewBox="0 0 24 24" class="breadcrumbHomeIcon_sfvy"><path d="M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z" fill="currentColor"></path></svg></a></li><li class="breadcrumbs__item"><span class="breadcrumbs__link">Introduction</span><meta itemprop="position" content="1"></li><li itemscope="" itemprop="itemListElement" itemtype="https://schema.org/ListItem" class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link" itemprop="name">Using Matchers</span><meta itemprop="position" content="2"></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: 29.7</span><div class="tocCollapsible_wXna theme-doc-toc-mobile tocMobile_Ojys"><button type="button" class="clean-btn tocCollapsibleButton_iI2p">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Using Matchers</h1></header><p>Jest uses "matchers" to let you test values in different ways. This document will introduce some commonly used matchers. For the full list, see the <a href="https://jestjs.io/docs/expect"><code>expect</code> API doc</a>.</p>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="common-matchers">Common Matchers<a href="https://jestjs.io/docs/using-matchers#common-matchers" class="hash-link" aria-label="Direct link to Common Matchers" title="Direct link to Common Matchers">â</a></h2>
  <p>The simplest way to test a value is with exact equality.</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'two plus two is four'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">2</span><span class="token plain"> </span><span class="token operator" style="color: rgb(136, 136, 136);">+</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">2</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBe</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">4</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <p>In this code, <code>expect(2 + 2)</code> returns an "expectation" object. You typically won't do much with these expectation objects except call matchers on them. In this code, <code>.toBe(4)</code> is the matcher. When Jest runs, it tracks all the failing matchers so that it can print out nice error messages for you.</p>
  <p><code>toBe</code> uses <code>Object.is</code> to test exact equality. If you want to check the value of an object, use <code>toEqual</code>:</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'object assignment'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(41, 122, 41);">const</span><span class="token plain"> data </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token literal-property property" style="color: rgb(130, 119, 44);">one</span><span class="token operator" style="color: rgb(136, 136, 136);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">1</span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  data</span><span class="token punctuation" style="color: rgb(57, 58, 52);">[</span><span class="token string" style="color: rgb(194, 19, 37);">'two'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">]</span><span class="token plain"> </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">2</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">data</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toEqual</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token literal-property property" style="color: rgb(130, 119, 44);">one</span><span class="token operator" style="color: rgb(136, 136, 136);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">1</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token literal-property property" style="color: rgb(130, 119, 44);">two</span><span class="token operator" style="color: rgb(136, 136, 136);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">2</span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <p><code>toEqual</code> recursively checks every field of an object or array.</p>
  <div class="theme-admonition theme-admonition-tip admonition_WCGJ alert alert--success"><div class="admonitionHeading_GCBg"><span class="admonitionIcon_L39b"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_pbrs"><p><code>toEqual</code> ignores object keys with <code>undefined</code> properties, <code>undefined</code> array items, array sparseness, or object type mismatch. To take these into account use <code>toStrictEqual</code> instead.</p></div></div>
  <p>You can also test for the opposite of a matcher using <code>not</code>:</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'adding positive numbers is not zero'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(41, 122, 41);">for</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token keyword" style="color: rgb(41, 122, 41);">let</span><span class="token plain"> a </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">1</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> a </span><span class="token operator" style="color: rgb(136, 136, 136);">&lt;</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">10</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> a</span><span class="token operator" style="color: rgb(136, 136, 136);">++</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token keyword control-flow" style="color: rgb(41, 122, 41);">for</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token keyword" style="color: rgb(41, 122, 41);">let</span><span class="token plain"> b </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">1</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> b </span><span class="token operator" style="color: rgb(136, 136, 136);">&lt;</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">10</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> b</span><span class="token operator" style="color: rgb(136, 136, 136);">++</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">      </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">a </span><span class="token operator" style="color: rgb(136, 136, 136);">+</span><span class="token plain"> b</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBe</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">0</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="truthiness">Truthiness<a href="https://jestjs.io/docs/using-matchers#truthiness" class="hash-link" aria-label="Direct link to Truthiness" title="Direct link to Truthiness">â</a></h2>
  <p>In tests, you sometimes need to distinguish between <code>undefined</code>, <code>null</code>, and <code>false</code>, but you sometimes do not want to treat these differently. Jest contains helpers that let you be explicit about what you want.</p>
  <ul>
  <li><code>toBeNull</code> matches only <code>null</code></li>
  <li><code>toBeUndefined</code> matches only <code>undefined</code></li>
  <li><code>toBeDefined</code> is the opposite of <code>toBeUndefined</code></li>
  <li><code>toBeTruthy</code> matches anything that an <code>if</code> statement treats as true</li>
  <li><code>toBeFalsy</code> matches anything that an <code>if</code> statement treats as false</li>
  </ul>
  <p>For example:</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'null'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(41, 122, 41);">const</span><span class="token plain"> n </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token keyword null nil" style="color: rgb(41, 122, 41);">null</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">n</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeNull</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">n</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeDefined</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">n</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeUndefined</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">n</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeTruthy</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">n</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeFalsy</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'zero'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(41, 122, 41);">const</span><span class="token plain"> z </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">0</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">z</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeNull</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">z</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeDefined</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">z</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeUndefined</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">z</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeTruthy</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">z</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeFalsy</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <p>You should use the matcher that most precisely corresponds to what you want your code to be doing.</p>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="numbers">Numbers<a href="https://jestjs.io/docs/using-matchers#numbers" class="hash-link" aria-label="Direct link to Numbers" title="Direct link to Numbers">â</a></h2>
  <p>Most ways of comparing numbers have matcher equivalents.</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'two plus two'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(41, 122, 41);">const</span><span class="token plain"> value </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">2</span><span class="token plain"> </span><span class="token operator" style="color: rgb(136, 136, 136);">+</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">2</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeGreaterThan</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">3</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeGreaterThanOrEqual</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">3.5</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeLessThan</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">5</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeLessThanOrEqual</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">4.5</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">// toBe and toEqual are equivalent for numbers</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBe</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">4</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toEqual</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">4</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <p>For floating point equality, use <code>toBeCloseTo</code> instead of <code>toEqual</code>, because you don't want a test to depend on a tiny rounding error.</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'adding floating point numbers'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword" style="color: rgb(41, 122, 41);">const</span><span class="token plain"> value </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">0.1</span><span class="token plain"> </span><span class="token operator" style="color: rgb(136, 136, 136);">+</span><span class="token plain"> </span><span class="token number" style="color: rgb(19, 115, 194);">0.2</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">//expect(value).toBe(0.3);           This won't work because of rounding error</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">value</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toBeCloseTo</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token number" style="color: rgb(19, 115, 194);">0.3</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">// This works.</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="strings">Strings<a href="https://jestjs.io/docs/using-matchers#strings" class="hash-link" aria-label="Direct link to Strings" title="Direct link to Strings">â</a></h2>
  <p>You can check strings against regular expressions with <code>toMatch</code>:</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'there is no I in team'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'team'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token property-access">not</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toMatch</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token regex regex-source language-regex" style="color: rgb(54, 172, 170);">I</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'but there is a "stop" in Christoph'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'Christoph'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toMatch</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token regex regex-source language-regex" style="color: rgb(54, 172, 170);">stop</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="arrays-and-iterables">Arrays and iterables<a href="https://jestjs.io/docs/using-matchers#arrays-and-iterables" class="hash-link" aria-label="Direct link to Arrays and iterables" title="Direct link to Arrays and iterables">â</a></h2>
  <p>You can check if an array or iterable contains a particular item using <code>toContain</code>:</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token keyword" style="color: rgb(41, 122, 41);">const</span><span class="token plain"> shoppingList </span><span class="token operator" style="color: rgb(136, 136, 136);">=</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token string" style="color: rgb(194, 19, 37);">'diapers'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token string" style="color: rgb(194, 19, 37);">'kleenex'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token string" style="color: rgb(194, 19, 37);">'trash bags'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token string" style="color: rgb(194, 19, 37);">'paper towels'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token string" style="color: rgb(194, 19, 37);">'milk'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">]</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'the shopping list has milk on it'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">shoppingList</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toContain</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'milk'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token keyword" style="color: rgb(41, 122, 41);">new</span><span class="token plain"> </span><span class="token class-name">Set</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token plain">shoppingList</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toContain</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'milk'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="exceptions">Exceptions<a href="https://jestjs.io/docs/using-matchers#exceptions" class="hash-link" aria-label="Direct link to Exceptions" title="Direct link to Exceptions">â</a></h2>
  <p>If you want to test whether a particular function throws an error when it's called, use <code>toThrow</code>.</p>
  <div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color: #393A34; --prism-background-color: #f6f6f6;"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar" style="color: rgb(57, 58, 52); background-color: rgb(246, 246, 246);"><code class="codeBlockLines_AclH"><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token keyword" style="color: rgb(41, 122, 41);">function</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token keyword control-flow" style="color: rgb(41, 122, 41);">throw</span><span class="token plain"> </span><span class="token keyword" style="color: rgb(41, 122, 41);">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'you are using the wrong JDK!'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token function" style="color: rgb(107, 46, 133);">test</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'compiling android goes as expected'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">,</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(57, 58, 52);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toThrow</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toThrow</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token known-class-name class-name">Error</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">// You can also use a string that must be contained in the error message or a regexp</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toThrow</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token string" style="color: rgb(194, 19, 37);">'you are using the wrong JDK'</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toThrow</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token regex regex-source language-regex" style="color: rgb(54, 172, 170);">JDK</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain" style="display: inline-block;"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">// Or you can match an exact error message using a regexp like below</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toThrow</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token regex regex-source language-regex anchor function" style="color: rgb(107, 46, 133);">^</span><span class="token regex regex-source language-regex" style="color: rgb(54, 172, 170);">you are using the wrong JDK</span><span class="token regex regex-source language-regex anchor function" style="color: rgb(107, 46, 133);">$</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">// Test fails</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain">  </span><span class="token function" style="color: rgb(107, 46, 133);">expect</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token plain"> </span><span class="token arrow operator" style="color: rgb(136, 136, 136);">=&gt;</span><span class="token plain"> </span><span class="token function" style="color: rgb(107, 46, 133);">compileAndroidCode</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">.</span><span class="token method function property-access" style="color: rgb(107, 46, 133);">toThrow</span><span class="token punctuation" style="color: rgb(57, 58, 52);">(</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token regex regex-source language-regex anchor function" style="color: rgb(107, 46, 133);">^</span><span class="token regex regex-source language-regex" style="color: rgb(54, 172, 170);">you are using the wrong JDK!</span><span class="token regex regex-source language-regex anchor function" style="color: rgb(107, 46, 133);">$</span><span class="token regex regex-delimiter" style="color: rgb(54, 172, 170);">/</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><span class="token plain"> </span><span class="token comment" style="color: rgb(153, 153, 136); font-style: italic;">// Test pass</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(57, 58, 52);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(57, 58, 52);">}</span><span class="token punctuation" style="color: rgb(57, 58, 52);">)</span><span class="token punctuation" style="color: rgb(57, 58, 52);">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_HV9T" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
  <div class="theme-admonition theme-admonition-tip admonition_WCGJ alert alert--success"><div class="admonitionHeading_GCBg"><span class="admonitionIcon_L39b"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_pbrs"><p>The function that throws an exception needs to be invoked within a wrapping function otherwise the <code>toThrow</code> assertion will fail.</p></div></div>
  <h2 class="anchor anchorWithStickyNavbar_JmGV" id="and-more">And More<a href="https://jestjs.io/docs/using-matchers#and-more" class="hash-link" aria-label="Direct link to And More" title="Direct link to And More">â</a></h2>
  <p>This is just a taste. For a complete list of matchers, check out the <a href="https://jestjs.io/docs/expect">reference docs</a>.</p>
  <p>Once you've learned about the matchers that are available, a good next step is to check out how Jest lets you <a href="https://jestjs.io/docs/asynchronous">test asynchronous code</a>.</p></div><footer class="theme-doc-footer docusaurus-mt-lg"><div class="theme-doc-footer-edit-meta-row row"><div class="col"><a href="https://github.com/jestjs/jest/edit/main/website/versioned_docs/version-29.7/UsingMatchers.md" target="_blank" rel="noopener noreferrer" class="theme-edit-this-page"><svg fill="currentColor" height="20" width="20" viewBox="0 0 40 40" class="iconEdit_bHB7" aria-hidden="true"><g><path d="m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z"></path></g></svg>Edit this page</a></div><div class="col lastUpdated_pbO5"><span class="theme-last-updated">Last updated<!-- --> on <b><time datetime="2023-09-12T06:45:27.000Z">Sep 12, 2023</time></b> by <b>Simen Bekkhus</b></span></div></div></footer></article><nav class="pagination-nav docusaurus-mt-lg" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="https://jestjs.io/docs/getting-started"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Getting Started</div></a><a class="pagination-nav__link pagination-nav__link--next" href="https://jestjs.io/docs/asynchronous"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Testing Asynchronous Code</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_XG6w thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="https://jestjs.io/docs/using-matchers#common-matchers" class="table-of-contents__link toc-highlight">Common Matchers</a></li><li><a href="https://jestjs.io/docs/using-matchers#truthiness" class="table-of-contents__link toc-highlight">Truthiness</a></li><li><a href="https://jestjs.io/docs/using-matchers#numbers" class="table-of-contents__link toc-highlight">Numbers</a></li><li><a href="https://jestjs.io/docs/using-matchers#strings" class="table-of-contents__link toc-highlight">Strings</a></li><li><a href="https://jestjs.io/docs/using-matchers#arrays-and-iterables" class="table-of-contents__link toc-highlight">Arrays and iterables</a></li><li><a href="https://jestjs.io/docs/using-matchers#exceptions" class="table-of-contents__link toc-highlight">Exceptions</a></li><li><a href="https://jestjs.io/docs/using-matchers#and-more" class="table-of-contents__link toc-highlight">And More</a></li></ul></div></div></div></div></main></div></div></div><footer class="footer footer--dark"><div class="container container-fluid"><div class="row footer__links"><div class="col footer__col"><div class="footer__title">Docs</div><ul class="footer__items clean-list"><li class="footer__item"><a class="footer__link-item" href="https://jestjs.io/docs/getting-started">Getting Started</a></li><li class="footer__item"><a class="footer__link-item" href="https://jestjs.io/docs/snapshot-testing">Guides</a></li><li class="footer__item"><a class="footer__link-item" href="https://jestjs.io/docs/api">API Reference</a></li></ul></div><div class="col footer__col"><div class="footer__title">Community</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://stackoverflow.com/questions/tagged/jestjs" target="_blank" rel="noopener noreferrer" class="footer__link-item">Stack Overflow<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a href="https://www.reactiflux.com/" target="_blank" rel="noopener noreferrer" class="footer__link-item">Reactiflux<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a href="https://twitter.com/jestjs_" target="_blank" rel="noopener noreferrer" class="footer__link-item">Twitter<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li></ul></div><div class="col footer__col"><div class="footer__title">More</div><ul class="footer__items clean-list"><li class="footer__item"><a class="footer__link-item" href="https://jestjs.io/blog">Blog</a></li><li class="footer__item"><a href="https://github.com/jestjs/jest" target="_blank" rel="noopener noreferrer" class="footer__link-item">GitHub<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a href="https://twitter.com/jestjs_" target="_blank" rel="noopener noreferrer" class="footer__link-item">Twitter<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li></ul></div><div class="col footer__col"><div class="footer__title">Legal</div><ul class="footer__items clean-list"><li class="footer__item"><a href="https://opensource.facebook.com/legal/privacy/" target="_blank" rel="noopener noreferrer" class="footer__link-item">Privacy<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li><li class="footer__item"><a href="https://opensource.facebook.com/legal/terms/" target="_blank" rel="noopener noreferrer" class="footer__link-item">Terms<svg width="13.5" height="13.5" aria-hidden="true" viewBox="0 0 24 24" class="iconExternalLink_nPrP"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></svg></a></li></ul></div></div><div class="footer__bottom text--center"><div class="margin-bottom--sm"><a href="https://opensource.facebook.com/" rel="noopener noreferrer" class="footerLogoLink_tutC"><img src="./Using Matchers Â· Jest_files/oss_logo.png" alt="Facebook Open Source Logo" class="footer__logo themedComponent_siVc themedComponent--light_hHel"></a></div><div class="footer__copyright">Copyright Â© 2023 Meta Platforms, Inc. and affiliates. Built with Docusaurus.</div></div></div></footer></div>
</body></html>`;

export const VERY_LONG_MESSAGE = `
B    uffer
        Buffers and character encodings
        Buffers and TypedArrays
        Buffers and iteration
        Class: Blob
            new buffer.Blob([sources[, options]])
            blob.arrayBuffer()
                blob.bytes()
            blob.size
            blob.slice([start[, end[, type]]])
            blob.stream()
            blob.text()
            blob.type
            Blob objects and MessageChannel
        Class: Buffer
            Static method: Buffer.alloc(size[, fill[, encoding]])
            Static method: Buffer.allocUnsafe(size)
            Static method: Buffer.allocUnsafeSlow(size)
            Static method: Buffer.byteLength(string[, encoding])
            Static method: Buffer.compare(buf1, buf2)
            Static method: Buffer.concat(list[, totalLength])
            Static method: Buffer.copyBytesFrom(view[, offset[, length]])
            Static method: Buffer.from(array)
            Static method: Buffer.from(arrayBuffer[, byteOffset[, length]])
            Static method: Buffer.from(buffer)
            Static method: Buffer.from(object[, offsetOrEncoding[, length]])
            Static method: Buffer.from(string[, encoding])
            Static method: Buffer.isBuffer(obj)
            Static method: Buffer.isEncoding(encoding)
            Class property: Buffer.poolSize
            buf[index]
            buf.buffer
            buf.byteOffset
            buf.compare(target[, targetStart[, targetEnd[, sourceStart[, sourceEnd]]]])
            buf.copy(target[, targetStart[, sourceStart[, sourceEnd]]])
            buf.entries()
            buf.equals(otherBuffer)
            buf.fill(value[, offset[, end]][, encoding])
            buf.includes(value[, byteOffset][, encoding])
            buf.indexOf(value[, byteOffset][, encoding])
            buf.keys()
            buf.lastIndexOf(value[, byteOffset][, encoding])
            buf.length
            buf.parent
            buf.readBigInt64BE([offset])
            buf.readBigInt64LE([offset])
            buf.readBigUInt64BE([offset])
            buf.readBigUInt64LE([offset])
            buf.readDoubleBE([offset])
            buf.readDoubleLE([offset])
            buf.readFloatBE([offset])
            buf.readFloatLE([offset])
            buf.readInt8([offset])
            buf.readInt16BE([offset])
            buf.readInt16LE([offset])
            buf.readInt32BE([offset])
            buf.readInt32LE([offset])
            buf.readIntBE(offset, byteLength)
            buf.readIntLE(offset, byteLength)
            buf.readUInt8([offset])
            buf.readUInt16BE([offset])
            buf.readUInt16LE([offset])
            buf.readUInt32BE([offset])
            buf.readUInt32LE([offset])
            buf.readUIntBE(offset, byteLength)
            buf.readUIntLE(offset, byteLength)
            buf.subarray([start[, end]])
            buf.slice([start[, end]])
            buf.swap16()
            buf.swap32()
            buf.swap64()
            buf.toJSON()
            buf.toString([encoding[, start[, end]]])
            buf.values()
            buf.write(string[, offset[, length]][, encoding])
            buf.writeBigInt64BE(value[, offset])
            buf.writeBigInt64LE(value[, offset])
            buf.writeBigUInt64BE(value[, offset])
            buf.writeBigUInt64LE(value[, offset])
            buf.writeDoubleBE(value[, offset])
            buf.writeDoubleLE(value[, offset])
            buf.writeFloatBE(value[, offset])
            buf.writeFloatLE(value[, offset])
            buf.writeInt8(value[, offset])
            buf.writeInt16BE(value[, offset])
            buf.writeInt16LE(value[, offset])
            buf.writeInt32BE(value[, offset])
            buf.writeInt32LE(value[, offset])
            buf.writeIntBE(value, offset, byteLength)
            buf.writeIntLE(value, offset, byteLength)
            buf.writeUInt8(value[, offset])
            buf.writeUInt16BE(value[, offset])
            buf.writeUInt16LE(value[, offset])
            buf.writeUInt32BE(value[, offset])
            buf.writeUInt32LE(value[, offset])
            buf.writeUIntBE(value, offset, byteLength)
            buf.writeUIntLE(value, offset, byteLength)
            new Buffer(array)
            new Buffer(arrayBuffer[, byteOffset[, length]])
            new Buffer(buffer)
            new Buffer(size)
            new Buffer(string[, encoding])
        Class: File
            new buffer.File(sources, fileName[, options])
            file.name
            file.lastModified
        node:buffer module APIs
            buffer.atob(data)
            buffer.btoa(data)
            buffer.isAscii(input)
            buffer.isUtf8(input)
            buffer.INSPECT_MAX_BYTES
            buffer.kMaxLength
            buffer.kStringMaxLength
            buffer.resolveObjectURL(id)
            buffer.transcode(source, fromEnc, toEnc)
            Class: SlowBuffer
                new SlowBuffer(size)
            Buffer constants
                buffer.constants.MAX_LENGTH
                buffer.constants.MAX_STRING_LENGTH
        Buffer.from(), Buffer.alloc(), and Buffer.allocUnsafe()
            The --zero-fill-buffers command-line option
            What makes Buffer.allocUnsafe() and Buffer.allocUnsafeSlow() "unsafe"?

Buffer
#

Stability: 2 - Stable

Source Code: lib/buffer.js

Buffer objects are used to represent a fixed-length sequence of bytes. Many Node.js APIs support Buffers.

The Buffer class is a subclass of JavaScript's Uint8Array class and extends it with methods that cover additional use cases. Node.js APIs accept plain Uint8Arrays wherever Buffers are supported as well.

While the Buffer class is available within the global scope, it is still recommended to explicitly reference it via an import or require statement.

const { Buffer } = require('node:buffer');

// Creates a zero-filled Buffer of length 10.
const buf1 = Buffer.alloc(10);

// Creates a Buffer of length 10,
// filled with bytes which all have the value "1".
const buf2 = Buffer.alloc(10, 1);

// Creates an uninitialized buffer of length 10.
// This is faster than calling Buffer.alloc() but the returned
// Buffer instance might contain old data that needs to be
// overwritten using fill(), write(), or other functions that fill the Buffer's
// contents.
const buf3 = Buffer.allocUnsafe(10);

// Creates a Buffer containing the bytes [1, 2, 3].
const buf4 = Buffer.from([1, 2, 3]);

// Creates a Buffer containing the bytes [1, 1, 1, 1] â the entries
// are all truncated using "(value & 255)" to fit into the range 0â255.
const buf5 = Buffer.from([257, 257.5, -255, '1']);

// Creates a Buffer containing the UTF-8-encoded bytes for the string 'tÃ©st':
// [0x74, 0xc3, 0xa9, 0x73, 0x74] (in hexadecimal notation)
// [116, 195, 169, 115, 116] (in decimal notation)
const buf6 = Buffer.from('tÃ©st');

// Creates a Buffer containing the Latin-1 bytes [0x74, 0xe9, 0x73, 0x74].
const buf7 = Buffer.from('tÃ©st', 'latin1');

Buffers and character encodings
#
History
	
	

	

	

When converting between Buffers and strings, a character encoding may be specified. If no character encoding is specified, UTF-8 will be used as the default.

const { Buffer } = require('node:buffer');

const buf = Buffer.from('hello world', 'utf8');

console.log(buf.toString('hex'));
// Prints: 68656c6c6f20776f726c64
console.log(buf.toString('base64'));
// Prints: aGVsbG8gd29ybGQ=

console.log(Buffer.from('fhqwhgads', 'utf8'));
// Prints: <Buffer 66 68 71 77 68 67 61 64 73>
console.log(Buffer.from('fhqwhgads', 'utf16le'));
// Prints: <Buffer 66 00 68 00 71 00 77 00 68 00 67 00 61 00 64 00 73 00>

Node.js buffers accept all case variations of encoding strings that they receive. For example, UTF-8 can be specified as 'utf8', 'UTF8', or 'uTf8'.

The character encodings currently supported by Node.js are the following:

    'utf8' (alias: 'utf-8'): Multi-byte encoded Unicode characters. Many web pages and other document formats use UTF-8. This is the default character encoding. When decoding a Buffer into a string that does not exclusively contain valid UTF-8 data, the Unicode replacement character U+FFFD  will be used to represent those errors.

    'utf16le' (alias: 'utf-16le'): Multi-byte encoded Unicode characters. Unlike 'utf8', each character in the string will be encoded using either 2 or 4 bytes. Node.js only supports the little-endian variant of UTF-16.

    'latin1': Latin-1 stands for ISO-8859-1. This character encoding only supports the Unicode characters from U+0000 to U+00FF. Each character is encoded using a single byte. Characters that do not fit into that range are truncated and will be mapped to characters in that range.

Converting a Buffer into a string using one of the above is referred to as decoding, and converting a string into a Buffer is referred to as encoding.

Node.js also supports the following binary-to-text encodings. For binary-to-text encodings, the naming convention is reversed: Converting a Buffer into a string is typically referred to as encoding, and converting a string into a Buffer as decoding.

    'base64': Base64 encoding. When creating a Buffer from a string, this encoding will also correctly accept "URL and Filename Safe Alphabet" as specified in RFC 4648, Section 5. Whitespace characters such as spaces, tabs, and new lines contained within the base64-encoded string are ignored.

    'base64url': base64url encoding as specified in RFC 4648, Section 5. When creating a Buffer from a string, this encoding will also correctly accept regular base64-encoded strings. When encoding a Buffer to a string, this encoding will omit padding.

    'hex': Encode each byte as two hexadecimal characters. Data truncation may occur when decoding strings that do not exclusively consist of an even number of hexadecimal characters. See below for an example.

The following legacy character encodings are also supported:

    'ascii': For 7-bit ASCII data only. When encoding a string into a Buffer, this is equivalent to using 'latin1'. When decoding a Buffer into a string, using this encoding will additionally unset the highest bit of each byte before decoding as 'latin1'. Generally, there should be no reason to use this encoding, as 'utf8' (or, if the data is known to always be ASCII-only, 'latin1') will be a better choice when encoding or decoding ASCII-only text. It is only provided for legacy compatibility.

    'binary': Alias for 'latin1'. The name of this encoding can be very misleading, as all of the encodings listed here convert between strings and binary data. For converting between strings and Buffers, typically 'utf8' is the right choice.

    'ucs2', 'ucs-2': Aliases of 'utf16le'. UCS-2 used to refer to a variant of UTF-16 that did not support characters that had code points larger than U+FFFF. In Node.js, these code points are always supported.

const { Buffer } = require('node:buffer');

Buffer.from('1ag123', 'hex');
// Prints <Buffer 1a>, data truncated when first non-hexadecimal value
// ('g') encountered.

Buffer.from('1a7', 'hex');
// Prints <Buffer 1a>, data truncated when data ends in single digit ('7').

Buffer.from('1634', 'hex');
// Prints <Buffer 16 34>, all data represented.

Modern Web browsers follow the WHATWG Encoding Standard which aliases both 'latin1' and 'ISO-8859-1' to 'win-1252'. This means that while doing something like http.get(), if the returned charset is one of those listed in the WHATWG specification it is possible that the server actually returned 'win-1252'-encoded data, and using 'latin1' encoding may incorrectly decode the characters.
Buffers and TypedArrays
#
History
	
	

Buffer instances are also JavaScript Uint8Array and TypedArray instances. All TypedArray methods are available on Buffers. There are, however, subtle incompatibilities between the Buffer API and the TypedArray API.

In particular:

    While TypedArray.prototype.slice() creates a copy of part of the TypedArray, Buffer.prototype.slice() creates a view over the existing Buffer without copying. This behavior can be surprising, and only exists for legacy compatibility. TypedArray.prototype.subarray() can be used to achieve the behavior of Buffer.prototype.slice() on both Buffers and other TypedArrays and should be preferred.
    buf.toString() is incompatible with its TypedArray equivalent.
    A number of methods, e.g. buf.indexOf(), support additional arguments.

There are two ways to create new TypedArray instances from a Buffer:

    Passing a Buffer to a TypedArray constructor will copy the Buffers contents, interpreted as an array of integers, and not as a byte sequence of the target type.

const { Buffer } = require('node:buffer');

const buf = Buffer.from([1, 2, 3, 4]);
const uint32array = new Uint32Array(buf);

console.log(uint32array);

// Prints: Uint32Array(4) [ 1, 2, 3, 4 ]

    Passing the Buffers underlying ArrayBuffer will create a TypedArray that shares its memory with the Buffer.

const { Buffer } = require('node:buffer');

const buf = Buffer.from('hello', 'utf16le');
const uint16array = new Uint16Array(
  buf.buffer,
  buf.byteOffset,
  buf.length / Uint16Array.BYTES_PER_ELEMENT);

console.log(uint16array);

// Prints: Uint16Array(5) [ 104, 101, 108, 108, 111 ]

It is possible to create a new Buffer that shares the same allocated memory as a TypedArray instance by using the TypedArray object's .buffer property in the same way. Buffer.from() behaves like new Uint8Array() in this context.

const { Buffer } = require('node:buffer');

const arr = new Uint16Array(2);

arr[0] = 5000;
arr[1] = 4000;

// Copies the contents of "arr".
const buf1 = Buffer.from(arr);

// Shares memory with "arr".
const buf2 = Buffer.from(arr.buffer);

console.log(buf1);
// Prints: <Buffer 88 a0>
console.log(buf2);
// Prints: <Buffer 88 13 a0 0f>

arr[1] = 6000;

console.log(buf1);
// Prints: <Buffer 88 a0>
console.log(buf2);
// Prints: <Buffer 88 13 70 17>

When creating a Buffer using a TypedArray's .buffer, it is possible to use only a portion of the underlying ArrayBuffer by passing in byteOffset and length parameters.

const { Buffer } = require('node:buffer');

const arr = new Uint16Array(20);
const buf = Buffer.from(arr.buffer, 0, 16);

console.log(buf.length);
// Prints: 16

The Buffer.from() and TypedArray.from() have different signatures and implementations. Specifically, the TypedArray variants accept a second argument that is a mapping function that is invoked on every element of the typed array:

    TypedArray.from(source[, mapFn[, thisArg]])

The Buffer.from() method, however, does not support the use of a mapping function:

    Buffer.from(array)
    Buffer.from(buffer)
    Buffer.from(arrayBuffer[, byteOffset[, length]])
    Buffer.from(string[, encoding])

Buffers and iteration
#

Buffer instances can be iterated over using for..of syntax:

const { Buffer } = require('node:buffer');

const buf = Buffer.from([1, 2, 3]);

for (const b of buf) {
  console.log(b);
}
// Prints:
//   1
//   2
//   3

Additionally, the buf.values(), buf.keys(), and buf.entries() methods can be used to create iterators.
Class: Blob
#
History
	
	

	

A Blob encapsulates immutable, raw data that can be safely shared across multiple worker threads.
new buffer.Blob([sources[, options]])
#
`;
